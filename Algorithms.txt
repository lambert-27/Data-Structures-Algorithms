//Explanation of un-declared helper variables
count = number of current sites (nodes) in the graph
sites[] = array of site objects (nodes) in the graph


int isSite(String siteName)
{
	for(i = 0; i < count; i++)
	{
		if(sites[i] == siteName)
		{
			//Returns index pos of site in array if found
			return i
		}
	}
	
	//Otherwise return -1
	return -1

}



Algorithm allCons(String site)
{
	index = isSite(site)
	
	//Check if the index is valid
	if(index != -1)
	{
		for(col = 0; col < count; col++)
		{
		//If a weight greater than 0 is detected, there is a connection
			if(graph[index][col] > 0)
				{
					output sites[col]
				}
			}
		}
		else
			output "Invalid site index"
}
		
		
Algorithm closest(Site site)
{
	index = isSite(site)
	
	if(index != -1)
	{
		for(col = 0; col < count; col++)
		{
			//If the weight is less than the smallest AND isn't a value of 0
			if(graph[index][col] < smallest AND graph[index][col] != 0)
			{
				smallest = graph[index][col]
			}
		}
	}
	
	output smallest
}




Function Search(site)
{
	for(i = 0; i < count; i++)
	{
		if(sites[i] == site)
		{
			output sites[i]
		}
	}
}




Function Insert(site1, site2, weight)
{
	//Get the indeces of both input sites
	i = isSite(site1Name)
	j = isSite(site2Name}

	if (site 1 == -1 OR site2 == -1)
	{
		output "Not found"	
	}
	else
	{
		//Create a new edge with both sets of co-ords 
		graph[i][j] = weight;
		graph[j][i] = weight;
	}
}

